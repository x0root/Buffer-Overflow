import subprocess

def display_banner():
    banner = """
     +-+-+-+-+-+-+ +-+-+-+-+-+-+-+
     |B|u|f|f|e|r| |e|x|p|l|o|i|t|
     +-+-+-+-+-+-+ +-+-+-+-+-+-+-+
    """
    print(banner)

def inject_command(command):
    try:
        print(f"Injecting command: {command}")
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        return result.stdout.strip()
    except Exception as e:
        return f"Failed to execute injected command: {e}"

def get_machine_info():
    info = {}
    info['Hostname'] = inject_command("hostname")
    ip_info = inject_command("ifconfig" if subprocess.run("command -v ifconfig", shell=True).returncode == 0 else "ip addr")
    info['IP Address'] = ip_info
    info['System Info'] = inject_command("uname -a")
    info['Disk Usage'] = inject_command("df -h")
    info['CPU Info'] = inject_command("cat /proc/cpuinfo" if subprocess.run("test -f /proc/cpuinfo", shell=True).returncode == 0 else "sysctl -n machdep.cpu.brand_string")
    info['Memory Info'] = inject_command("free -h")
    return info

def simulate_large_buffer():
    buffer_size = 1000
    buffer = bytearray(buffer_size)
    nop_sled_size = 200
    shellcode = b"/bin/sh"
    return_address = b"\xde\xad\xbe\xef"
    buffer[:nop_sled_size] = b"\x90" * nop_sled_size
    buffer[nop_sled_size:nop_sled_size+len(shellcode)] = shellcode
    buffer[-4:] = return_address
    print(f"Buffer size: {len(buffer)} bytes")
    print(f"Buffer (first 50 bytes): {buffer[:50]}")
    print(f"Buffer (last 50 bytes): {buffer[-50:]}")

if __name__ == "__main__":
    display_banner()
    simulate_large_buffer()
    machine_info = get_machine_info()
    for key, value in machine_info.items():
        print(f"\n--- {key} ---\n{value}")
